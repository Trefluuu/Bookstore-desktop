# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'favourites.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import mysql.connector as mc
from PyQt5.QtWidgets import QTableWidgetItem


class Ui_Favourites(object):
    def setupUi(self, Favourites):
        Favourites.setObjectName("Favourites")
        Favourites.resize(764, 610)
        self.tableWidget = QtWidgets.QTableWidget(Favourites)
        self.tableWidget.setGeometry(QtCore.QRect(20, 90, 721, 431))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(2)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        self.removeBook = QtWidgets.QPushButton(Favourites)
        self.removeBook.setGeometry(QtCore.QRect(450, 540, 141, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.removeBook.setFont(font)
        self.removeBook.setStyleSheet("background-color: \"red\"")
        self.removeBook.setObjectName("removeBook")
        self.removeBook.clicked.connect(self.removeItem)

        self.reload = QtWidgets.QPushButton(Favourites)
        self.reload.setGeometry(QtCore.QRect(180, 540, 141, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.reload.setFont(font)
        self.reload.setStyleSheet("background-color: \"grey\"")
        self.reload.setObjectName("Refresh")
        self.reload.clicked.connect(self.getData)

        self.frame = QtWidgets.QFrame(Favourites)
        self.frame.setGeometry(QtCore.QRect(-190, 0, 1131, 71))
        self.frame.setStyleSheet("background-color: \"green\"")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.label = QtWidgets.QLabel(self.frame)
        self.label.setGeometry(QtCore.QRect(10, 10, 1111, 51))
        font = QtGui.QFont()
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")

        self.tableWidget.setColumnWidth(0, 608)
        self.tableWidget.setColumnWidth(1, 100)

        self.retranslateUi(Favourites)
        QtCore.QMetaObject.connectSlotsByName(Favourites)

    def retranslateUi(self, Favourites):
        _translate = QtCore.QCoreApplication.translate
        Favourites.setWindowTitle(_translate("Favourites", "Favourites"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("Favourites", "Title"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("Favourites", "Price"))
        self.removeBook.setText(_translate("Favourites", "Remove Book"))
        self.reload.setText(_translate("Favourites", "Refresh"))
        self.label.setText(_translate("Favourites", "List of favourites books"))

    def getData(self):

        mydb = mc.connect(
            host="localhost",
            user="root",
            password="",
            database="bookstore"
        )

        mycursor = mydb.cursor()
        mycursor.execute("SELECT title, price from favourites")
        result = mycursor.fetchall()

        self.tableWidget.setRowCount(0)

        for row_number, row_data in enumerate(result):
            self.tableWidget.insertRow(row_number)
            for column_number, data in enumerate(row_data):
                self.tableWidget.setItem(row_number, column_number, QTableWidgetItem(str(data)))

    def removeItem(self):

        row = self.tableWidget.currentRow()

        currentTitle = (self.tableWidget.item(row, 0).text())
        currentPrice = (self.tableWidget.item(row, 1).text())

        mydb = mc.connect(
            host="localhost",
            user="root",
            password="",
            database="bookstore"
        )
        mycursor = mydb.cursor()
        mycursor.execute("DELETE FROM favourites WHERE title like '" + currentTitle + "' and price like '" + currentPrice +"'")
        mydb.commit()

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    app.setStyle('Fusion')
    Favourites = QtWidgets.QWidget()
    ui = Ui_Favourites()
    ui.setupUi(Favourites)
    Favourites.show()
    sys.exit(app.exec_())
